:root {
  --bg: #f8f8f9;
  --card-bg: #fff;
  --text: #222e3a;
  --input-bg: #fff;
  --input-border: #d1d5db;
  --primary: #3498db;
  --primary-hover: #217dbb;
  --shadow: 0 4px 24px rgba(0,0,0,0.08);
  --border: #f0f0f0;
  --task-completed: #9e9e9e;
  --priority-high-bg: #ffebee;
  --priority-high: #c62828;
  --priority-medium-bg: #fff3e0;
  --priority-medium: #ef6c00;
  --priority-low-bg: #e8f5e9;
  --priority-low: #2e7d32;
  --filter-link: #3498db;
  --filter-link-hover: #217dbb;
  --danger: #f44336;
  --danger-hover: #c62828;
}

body {
  background: var(--bg);
  color: var(--text);
  min-height: 100vh;
  margin: 0;
  font-family: 'Segoe UI', Arial, sans-serif;
  display: flex;
  align-items: center;
  justify-content: center;
}

body.dark {
  --bg: #181a1b;
  --card-bg: #23272f;
  --text: #f3f6fa;
  --input-bg: #23272f;
  --input-border: #444950;
  --primary: #4fa3ff;
  --primary-hover: #217dbb;
  --shadow: 0 4px 24px rgba(0,0,0,0.32);
  --border: #23272f;
  --task-completed: #7a7a7a;
  --priority-high-bg: #3a2327;
  --priority-high: #ff8a80;
  --priority-medium-bg: #3a2e23;
  --priority-medium: #ffd180;
  --priority-low-bg: #233a2e;
  --priority-low: #b9f6ca;
  --filter-link: #4fa3ff;
  --filter-link-hover: #217dbb;
  --danger: #ff5252;
  --danger-hover: #ff1744;
}

#root {
  width: 100vw;
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

.app {
  background: var(--card-bg);
  width: 100%;
  min-width: 0;
  box-sizing: border-box;
  max-width: 500px;
  margin: 0;
  padding: 2.5rem 2rem 1.5rem 2rem;
  border-radius: 12px;
  box-shadow: var(--shadow);
  display: flex;
  flex-direction: column;
  align-items: stretch;
}

.app h1 {
  font-size: 2.2rem;
  font-weight: 700;
  margin-bottom: 2rem;
  color: var(--text);
  text-align: center;
}

.task-form {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-bottom: 1.5rem;
  align-items: stretch;
}

.form-group {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  width: 100%;
}

.task-input {
  padding: 0.7rem 1rem;
  border: 1px solid var(--input-border);
  border-radius: 5px;
  font-size: 1rem;
  background: var(--input-bg);
  color: var(--text);
}

.task-input.error {
  border-color: #ff4444;
}

.error-message {
  color: #ff4444;
  font-size: 0.875rem;
}

.priority-select {
  padding: 0.7rem 1rem;
  border: 1px solid var(--input-border);
  border-radius: 5px;
  font-size: 1rem;
  background: var(--input-bg);
  color: var(--text);
}

.add-button {
  width: 100%;
  margin-top: 0.5rem;
  padding: 0.7rem 1.5rem;
  background-color: var(--primary);
  color: #fff;
  border: none;
  border-radius: 5px;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: background 0.2s;
}

.add-button:hover {
  background: var(--primary-hover);
}

.task-list {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.task-item {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem 0.5rem;
  background: none;
  border-radius: 6px;
  box-shadow: none;
  border-bottom: 1px solid var(--border);
}

.task-content {
  flex: 1;
  display: flex;
  align-items: center;
  gap: 1rem;
}

.task-text {
  flex: 1;
  font-size: 1.05rem;
  color: var(--text);
}

.priority-badge {
  padding: 0.2rem 0.7rem;
  border-radius: 4px;
  font-size: 0.9rem;
  font-weight: 500;
}

.priority-high {
  background-color: var(--priority-high-bg);
  color: var(--priority-high);
}

.priority-medium {
  background-color: var(--priority-medium-bg);
  color: var(--priority-medium);
}

.priority-low {
  background-color: var(--priority-low-bg);
  color: var(--priority-low);
}

.task-actions {
  display: flex;
  gap: 0.5rem;
}

.edit-button,
.delete-button,
.save-button,
.cancel-button {
  padding: 0.25rem 0.7rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
}

.edit-button {
  background: var(--primary);
  color: #fff;
}

.delete-button {
  background: var(--danger);
  color: #fff;
}

.save-button {
  background: #4CAF50;
  color: #fff;
}

.cancel-button {
  background: #9e9e9e;
  color: #fff;
}

.completed .task-text {
  text-decoration: line-through;
  color: var(--task-completed);
}

.completed .priority-badge {
  opacity: 0.7;
}

.filter-bar {
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
  justify-content: flex-end;
}

.filter-button {
  padding: 0.5rem 1rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  background-color: white;
  cursor: pointer;
  color: #3498db;
  font-weight: 500;
  transition: background 0.2s, color 0.2s;
}

.filter-button.active {
  background-color: #3498db;
  color: white;
  border-color: #3498db;
}

/* Custom Checkbox Styles */
.checkbox-container {
  position: relative;
  padding-left: 28px;
  cursor: pointer;
  user-select: none;
  display: flex;
  align-items: center;
}

.checkbox-container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkmark {
  position: absolute;
  left: 0;
  height: 18px;
  width: 18px;
  background-color: var(--input-bg);
  border: 2px solid var(--input-border);
  border-radius: 4px;
  transition: all 0.2s ease;
}

.checkbox-container:hover input ~ .checkmark {
  border-color: var(--primary);
}

.checkbox-container input:checked ~ .checkmark {
  background-color: var(--primary);
  border-color: var(--primary);
}

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

.checkbox-container input:checked ~ .checkmark:after {
  display: block;
}

.checkbox-container .checkmark:after {
  left: 5px;
  top: 1px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

/* Utility links */
.utility-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
  font-size: 1rem;
}

.utility-link {
  color: var(--filter-link);
  text-decoration: none;
  cursor: pointer;
  margin-left: 1.5rem;
  font-weight: 500;
  transition: color 0.2s;
}

.utility-link:hover {
  color: var(--filter-link-hover);
}

.utility-link.danger {
  color: var(--danger);
}

.utility-link.danger:hover {
  color: var(--danger-hover);
}

/* Hide default number spinner for input[type=number] if used */
input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  -moz-appearance: textfield;
}

.dark-toggle {
  background: var(--primary);
  color: #fff;
  border: none;
  border-radius: 5px;
  padding: 0.5rem 1.2rem;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: background 0.2s;
}
.dark-toggle:hover {
  background: var(--primary-hover);
}

@media (min-width: 600px) {
  .app {
    max-width: 500px;
    margin: 40px auto;
    padding: 2.5rem 2rem 1.5rem 2rem;
    border-radius: 12px;
  }
  .task-form {
    flex-direction: row;
    gap: 0.75rem;
    align-items: flex-start;
  }
  .add-button {
    width: auto;
    align-self: flex-start;
    margin-top: 0;
  }
}

@media (max-width: 600px) {
  .app {
    padding: 1rem 0.5rem;
    box-shadow: none;
    border-radius: 0;
    max-width: 100vw;
  }
  .task-list {
    gap: 0.5rem;
  }
  .task-item {
    flex-direction: column;
    align-items: flex-start;
    padding: 0.75rem 0.25rem;
    gap: 0.5rem;
  }
  .task-content {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.25rem;
    width: 100%;
  }
  .task-actions {
    width: 100%;
    justify-content: flex-end;
  }
  .filter-bar {
    flex-direction: column;
    gap: 0.5rem;
    align-items: flex-end;
  }
}
